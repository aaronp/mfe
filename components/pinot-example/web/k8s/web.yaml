apiVersion: apps/v1
kind: Deployment
metadata:
  name: pinot-component-web-deployment
  namespace: mfe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pinot-component-web
  template:
    metadata:
      labels:
        app: pinot-component-web
    spec:
      containers:
      - name: pinot-component-web
        image: porpoiseltd/pinot-component-web:0.0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 3
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 3
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
      - name: pinot-registry-sidecar
        image: porpoiseltd/service-registry-client:0.0.2
        imagePullPolicy: Always
        env:
          - name: HOSTPORT
            value: "http://service-registry-service.mfe:8080"
          - name: ID
            value: pinot-component-web
          - name: FREQUENCY_IN_SECONDS
            value: "3"
          - name: BODY
            value: '{"webComponent":{"jsUrl":"http://pinot-component-web.mfe:8080/bundle.js","cssUrl":"http://pinot-component-web.mfe:8080/bundle.css","componentId":"<my-card card_title=\"some title\" card_desc=\"some desc\"></my-card>"},"label":"basic card","tags":{"props":"card_title,card_desc"}}'
        resources:
          limits:
            memory: "64Mi"
            cpu: "100m"

---
apiVersion: v1
kind: Service
metadata:
  name: pinot-component-web
  namespace: mfe
spec:
  type: LoadBalancer
  sessionAffinity: None
  selector:
    app: pinot-component-web
  ports:
  - name : default
    port: 8080
    targetPort: 8080